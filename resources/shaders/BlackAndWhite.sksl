uniform shader texture;

uniform float red;
uniform float yellow;
uniform float green;
uniform float cyan;
uniform float blue;
uniform float magenta;

half3 rgb2hsv(half3 c)
{
	half4 K = half4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
	half4 p = mix(half4(c.bg, K.wz), half4(c.gb, K.xy), step(c.b, c.g));
	half4 q = mix(half4(p.xyw, c.r), half4(c.r, p.yzx), step(p.x, c.r));
	float d = q.x - min(q.w, q.y);
	float e = 1.0e-10;
	return half3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

half3 hsv2rgb(half3 c)
{
	half4 K = half4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
	half3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
	return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

half4 main(float2 p) {
	half3 base = texture.eval(p).rgb;
	base = rgb2hsv(base);

	float hueInterval = 1.0 / 6.0;
	half2 region = mix(half2(red, yellow),
		mix(half2(yellow, green),
			mix(half2(green, cyan),
				mix(half2(cyan, blue),
					mix(half2(blue, magenta),
						half2(magenta, red),
						step(5.0 * hueInterval, base.x)),
					step(4.0 * hueInterval, base.x)),
				step(3.0 * hueInterval, base.x)),
			step(2.0 * hueInterval, base.x)),
		step(hueInterval, base.x));

	float hue = (hueInterval - mod(base.x, hueInterval)) / hueInterval;
	float brightness = mix(base.z, mix(region.y, region.x, hue) * base.z, base.y);
	return half4(hsv2rgb(half3(0.0, 0.0, brightness)), 1.0);
}
